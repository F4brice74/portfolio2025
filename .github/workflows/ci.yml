name: CI / CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run ESLint
        run: pnpm lint

      - name: Run TypeScript check
        run: pnpm type-check

      - name: Build project for verification
        run: pnpm build

  # e2e-tests:
  #   needs: quality-checks
  #   runs-on: ubuntu-latest
  #   services:
  #     # PostgreSQL service for E2E tests
  #     postgres:
  #       image: postgres:13
  #       env:
  #         POSTGRES_USER: user
  #         POSTGRES_PASSWORD: password
  #         POSTGRES_DB: testdb
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v4
  #       with:
  #         version: latest

  #     - name: Install dependencies
  #       run: pnpm install --no-frozen-lockfile

  #     - name: Install Playwright browsers
  #       run: npx playwright install --with-deps

  #     - name: Run E2E tests
  #       run: pnpm test:e2e
  #       env:
  #         DATABASE_URL: postgresql://user:password@localhost:5432/testdb
  #         NEXT_PUBLIC_SITE_URL: http://localhost:3000

  #     - name: Upload Playwright test results
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 30

  deploy-to-vercel:
    needs: quality-checks
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
